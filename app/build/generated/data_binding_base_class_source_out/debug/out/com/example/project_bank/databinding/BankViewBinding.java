// Generated by view binder compiler. Do not edit!
package com.example.project_bank.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TableLayout;
import android.widget.TableRow;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.project_bank.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BankViewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView accNo;

  @NonNull
  public final TableRow balRow;

  @NonNull
  public final TextView bankBal;

  @NonNull
  public final TableLayout bankLayout;

  @NonNull
  public final TextView bankName;

  @NonNull
  public final TableRow bankRow;

  @NonNull
  public final CardView cardview;

  private BankViewBinding(@NonNull LinearLayout rootView, @NonNull TextView accNo,
      @NonNull TableRow balRow, @NonNull TextView bankBal, @NonNull TableLayout bankLayout,
      @NonNull TextView bankName, @NonNull TableRow bankRow, @NonNull CardView cardview) {
    this.rootView = rootView;
    this.accNo = accNo;
    this.balRow = balRow;
    this.bankBal = bankBal;
    this.bankLayout = bankLayout;
    this.bankName = bankName;
    this.bankRow = bankRow;
    this.cardview = cardview;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BankViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BankViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bank_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BankViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accNo;
      TextView accNo = ViewBindings.findChildViewById(rootView, id);
      if (accNo == null) {
        break missingId;
      }

      id = R.id.balRow;
      TableRow balRow = ViewBindings.findChildViewById(rootView, id);
      if (balRow == null) {
        break missingId;
      }

      id = R.id.bankBal;
      TextView bankBal = ViewBindings.findChildViewById(rootView, id);
      if (bankBal == null) {
        break missingId;
      }

      id = R.id.bankLayout;
      TableLayout bankLayout = ViewBindings.findChildViewById(rootView, id);
      if (bankLayout == null) {
        break missingId;
      }

      id = R.id.bankName;
      TextView bankName = ViewBindings.findChildViewById(rootView, id);
      if (bankName == null) {
        break missingId;
      }

      id = R.id.bankRow;
      TableRow bankRow = ViewBindings.findChildViewById(rootView, id);
      if (bankRow == null) {
        break missingId;
      }

      id = R.id.cardview;
      CardView cardview = ViewBindings.findChildViewById(rootView, id);
      if (cardview == null) {
        break missingId;
      }

      return new BankViewBinding((LinearLayout) rootView, accNo, balRow, bankBal, bankLayout,
          bankName, bankRow, cardview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
