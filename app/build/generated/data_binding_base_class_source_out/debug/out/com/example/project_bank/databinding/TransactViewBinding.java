// Generated by view binder compiler. Do not edit!
package com.example.project_bank.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TableLayout;
import android.widget.TableRow;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.project_bank.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TransactViewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView tableAmount;

  @NonNull
  public final TextView tableDescription;

  @NonNull
  public final TextView tableId;

  @NonNull
  public final TableLayout tableLayout;

  @NonNull
  public final TableRow tableRow;

  @NonNull
  public final TextView tableType;

  private TransactViewBinding(@NonNull LinearLayout rootView, @NonNull TextView tableAmount,
      @NonNull TextView tableDescription, @NonNull TextView tableId,
      @NonNull TableLayout tableLayout, @NonNull TableRow tableRow, @NonNull TextView tableType) {
    this.rootView = rootView;
    this.tableAmount = tableAmount;
    this.tableDescription = tableDescription;
    this.tableId = tableId;
    this.tableLayout = tableLayout;
    this.tableRow = tableRow;
    this.tableType = tableType;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TransactViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TransactViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.transact_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TransactViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tableAmount;
      TextView tableAmount = ViewBindings.findChildViewById(rootView, id);
      if (tableAmount == null) {
        break missingId;
      }

      id = R.id.tableDescription;
      TextView tableDescription = ViewBindings.findChildViewById(rootView, id);
      if (tableDescription == null) {
        break missingId;
      }

      id = R.id.tableId;
      TextView tableId = ViewBindings.findChildViewById(rootView, id);
      if (tableId == null) {
        break missingId;
      }

      id = R.id.tableLayout;
      TableLayout tableLayout = ViewBindings.findChildViewById(rootView, id);
      if (tableLayout == null) {
        break missingId;
      }

      id = R.id.tableRow;
      TableRow tableRow = ViewBindings.findChildViewById(rootView, id);
      if (tableRow == null) {
        break missingId;
      }

      id = R.id.tableType;
      TextView tableType = ViewBindings.findChildViewById(rootView, id);
      if (tableType == null) {
        break missingId;
      }

      return new TransactViewBinding((LinearLayout) rootView, tableAmount, tableDescription,
          tableId, tableLayout, tableRow, tableType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
